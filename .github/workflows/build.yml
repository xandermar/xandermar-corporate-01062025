name: Build Static HTML

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get install -y jq sass

      - name: Download content.json
        run: |
          curl -o content.json https://raw.githubusercontent.com/xandermar/action-build/refs/heads/main/content.json

      - name: Remove all files in 'docs' directory
        run: |
          if [ -d "docs" ]; then
            git rm -fr docs/*
          fi

      - name: Create 'docs' directory
        run: |
          mkdir -p docs

      - name: List files in docs before cleanup - Check 1
        run: |
          echo "Before Cleanup:"
          ls -R docs

      - name: Create 'CNAME' file in 'docs' directory
        run: |
          echo "static.xandermar.com" > docs/CNAME

      - name: List files in docs before cleanup - Check 2
        run: |
          echo "Before Cleanup:"
          ls -R docs

      - name: Generate HTML files
        run: |
          # Copy front.html to root dir
          cp front.html docs/index.html

          # Read the content.json and create HTML files
          cat content.json | jq -c '.[]' | while read entity; do
            path=$(echo "$entity" | jq -r '.path')
            html=$(echo "$entity" | jq -r '.html')

            # Replace path slashes with dashes and create the HTML file in docs
            # file_name="docs/$(echo "$path" | sed 's/\//-/g').html"
            file_name="docs/$path"

            mkdir -p "$(dirname $file_name)"


            # Write the HTML content to the file
            echo "$html" > "$file_name"

            echo "Created: $file_name"
          done

      - name: Build CSS
        run: |
          # Copy the CSS file to the docs directory
          sass main.scss docs/main.css

      - name: Build Placeholders
        run: |
          # Read the content of menu.html
          MENU_CONTENT=$(<"menu.html")
          sed -i.bak "s|\[menu\]|$MENU_CONTENT|g" "front.html"

      - name: Commit generated files
        run: |
          # Check if there are any changes
          if [[ $(git status --porcelain) ]]; then
            # If there are changes, add, commit, and push
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            git add .
            git commit -m "Generated HTML files"
            git push
          else
            echo "No changes to commit."
          fi

